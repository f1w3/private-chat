buildscript {
	dependencies {
		classpath "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0"
	}
}

plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}
apply plugin: "com.github.johnrengelman.shadow"
configurations {
	shadow
	modImplementation.extendsFrom shadow
}

version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modApi "me.shedaniel.cloth:cloth-config-fabric:9.0.94"
	shadow "org.glassfish.tyrus.bundles:tyrus-standalone-client:2.1.2"
}

shadowJar {
	classifier = "dev"
	configurations = [project.configurations.shadow]
}

processResources {
	inputs.property "version", project.version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

remapJar {
	dependsOn shadowJar
	inputFile = shadowJar.archiveFile
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release = targetJavaVersion
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	archivesBaseName = project.archives_base_name
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {

	}
}
